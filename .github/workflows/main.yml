name: iOS CI/CD


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Setup Development Code Signing
        env:
          IOS_DEVELOPMENT_PROFILE_BASE64: ${{ secrets.IOS_DEVELOPMENT_PROFILE_BASE64 }}
          IOS_PROVISIONING_PROFILE_UUID: ${{ secrets.IOS_PROVISIONING_PROFILE_UUID }}
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          if [ -z "$IOS_DEVELOPMENT_PROFILE_BASE64" ] || [ -z "$IOS_PROVISIONING_PROFILE_UUID" ] || [ -z "$IOS_CERTIFICATE_BASE64" ] || [ -z "$IOS_CERTIFICATE_PASSWORD" ] || [ -z "$APPLE_TEAM_ID" ]; then
            echo "‚ùå One or more code signing secrets are missing!"
            exit 1
          fi
          echo "üîê Creating build keychain..."
          security create-keychain -p "$IOS_CERTIFICATE_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$IOS_CERTIFICATE_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 build.keychain
          echo "üì¶ Importing development certificate..."
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          echo "üì± Importing ad hoc provisioning profile..."
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_DEVELOPMENT_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/$IOS_PROVISIONING_PROFILE_UUID.mobileprovision
          echo "‚úÖ Development code signing setup complete"
          echo "üîç Verifying keychain identities: $(security find-identity -p codesigning -v)"
          echo "üîç Verifying provisioning profiles: $(ls -la ~/Library/MobileDevice/Provisioning\ Profiles/)"

      - name: Ensure Keychain is Unlocked for Archive
        run: |
          security unlock-keychain -p "$IOS_CERTIFICATE_PASSWORD" build.keychain

      - name: Install Dependencies
        run: |
          cd ios
          gem install cocoapods
          pod install

      - name: Build and Archive
        env:
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        run: |
          cd ios
          xcodebuild -workspace CICDDEMOAPP.xcworkspace -scheme CICDDEMOAPP -configuration Release -destination 'generic/platform=iOS' -archivePath build/CICDDEMOAPP.xcarchive -allowProvisioningUpdates DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} CODE_SIGN_IDENTITY="iPhone Distribution" PROVISIONING_PROFILE_SPECIFIER=${{ secrets.IOS_PROVISIONING_PROFILE_UUID }} clean archive

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive -archivePath build/CICDDEMOAPP.xcarchive -exportPath build -exportOptionsPlist exportOptions.plist

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: CICDDEMOAPP-ipa
          path: ios/build/CICDDEMOAPP.ipa
