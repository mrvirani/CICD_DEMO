name: iOS CI/CD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_DEVELOPMENT_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ci # You can change this to a more secure value if needed
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH >/dev/null
          security list-keychain -d user -s $KEYCHAIN_PATH
          # Extract UUID from provisioning profile
          UUID=`/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i "$PP_PATH")`
          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
      - name: Create exportOptions.plist
        env:
          BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
        run: |
          UUID=`/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i "$RUNNER_TEMP/build_pp.mobileprovision")`
          cat << EOF > exportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>teamID</key>
            <string>$TEAM_ID</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>signingCertificate</key>
            <string>$SIGNING_IDENTITY</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>$BUNDLE_ID</key>
              <string>$UUID</string>
            </dict>
          </dict>
          </plist>
          EOF
      - name: Check Xcode version
        run: xcodebuild -version
      - name: Build archive
        env:
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
        run: |
          UUID=`/usr/libexec/PlistBuddy -c "Print UUID" /dev/stdin <<< $(security cms -D -i "$RUNNER_TEMP/build_pp.mobileprovision")`
          xcodebuild clean archive \
            -project CICDDEMOAPP.xcodeproj \
            -scheme CICDDEMOAPP \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $RUNNER_TEMP/CICDDEMOAPP.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="$SIGNING_IDENTITY" \
            PROVISIONING_PROFILE_SPECIFIER="$UUID" \
            DEVELOPMENT_TEAM="$TEAM_ID"
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/CICDDEMOAPP.xcarchive \
            -exportPath $RUNNER_TEMP/build \
            -exportOptionsPlist exportOptions.plist
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-ipa
          path: $RUNNER_TEMP/build/*.ipa
          retention-days: 5
